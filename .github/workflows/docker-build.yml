name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: sherluck007
  FRONTEND_IMAGE: sherluck007/sunx-loyalty-frontend
  BACKEND_IMAGE: sherluck007/sunx-loyalty-backend

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine tag
      id: tag
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/heads/develop ]]; then
          echo "tag=staging" >> $GITHUB_OUTPUT
        else
          echo "tag=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:${{ steps.tag.outputs.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine tag
      id: tag
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/heads/develop ]]; then
          echo "tag=staging" >> $GITHUB_OUTPUT
        else
          echo "tag=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
